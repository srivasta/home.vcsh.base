#!/bin/bash

_battery() {
  uname_s=$(uname -s)
  case "$uname_s" in
    *Darwin*)
      batt=$(pmset -g batt)
      percentage=$(echo "$batt" |egrep -o [0-9]+%) || return
      discharging=$(echo "$batt" | grep -qi "discharging" && echo "true" || echo "false")
      charge="${percentage%%%} / 100"
      ;;
    *Linux*)
      batpath=/sys/class/power_supply/BAT0
      if [ ! -d $batpath ]; then
        batpath=/sys/class/power_supply/BAT1
      fi
      discharging=$(grep -qi "discharging" $batpath/status && echo "true" || echo "false")
      bat_capacity=$batpath/capacity
      bat_energy_full=$batpath/energy_full
      bat_energy_now=$batpath/energy_now
      if [ -r "$bat_capacity" ]; then
        charge="$(cat $bat_capacity) / 100"
      else
        if [ ! -r "$bat_energy_full" ] || [ ! -r "$bat_energy_now" ]; then
          return
        fi
        charge="$(cat $bat_energy_now) / $(cat $bat_energy_full)" || return
      fi
      ;;
    *CYGWIN*)
      wmic path Win32_Battery 2>&1 | grep -q 'No Instance' && return
      discharging=$(wmic path Win32_Battery Get BatteryStatus 2>/dev/null | grep -q 1 && echo "true" || echo "false")
      percentage=$(wmic path Win32_Battery Get EstimatedChargeRemaining /format:list 2>/dev/null | grep '[^[:blank:]]' | cut -d= -f2)
      charge="${percentage} / 100"
      ;;
    *OpenBSD*)
       discharging=$(sysctl -n hw.sensors.acpibat0.raw0 | grep -q 1 && echo "true" || echo "false")
       if sysctl -n hw.sensors.acpibat0 | grep -q amphour; then
         charge="$(sysctl -n hw.sensors.acpibat0.amphour3 | cut -d' ' -f1) / $(sysctl -n hw.sensors.acpibat0.amphour0 | cut -d' ' -f1)"
       else
         charge="$(sysctl -n hw.sensors.acpibat0.watthour3 | cut -d' ' -f1) / $(sysctl -n hw.sensors.acpibat0.watthour0 | cut -d' ' -f1)"
       fi
      ;;
    *)
      return
  esac

  variables=$(tmux  show -gqv '@battery_bar_symbol_full' \;\
                    show -gqv '@battery_bar_symbol_empty' \;\
                    show -gqv '@battery_bar_length' \;\
                    show -gqv '@battery_bar_palette' \;\
                    show -gqv '@battery_hbar_palette' \;\
                    show -gqv '@battery_vbar_palette' \;\
                    show -gqv '@battery_status_charging' \;\
                    show -gqv '@battery_status_discharging')
  # shellcheck disable=SC2086
  { set -f; IFS="$__newline"; set -- $variables; unset IFS; set +f; }

  battery_bar_symbol_full=$1
  battery_bar_symbol_empty=$2
  battery_bar_length=$3
  battery_bar_palette=$4
  battery_hbar_palette=$5
  battery_vbar_palette=$6
  battery_status_charging=$7
  battery_status_discharging=$8

  if [ x"$battery_bar_length" = x"auto" ]; then
    columns=$(tmux -q display -p '#{client_width}' 2> /dev/null || echo 80)
    if [ "$columns" -ge 80 ]; then
      battery_bar_length=10
    else
      battery_bar_length=5
    fi
  fi

  if [ x"$discharging" = x"true" ]; then
    battery_status="$battery_status_discharging"
  else
    battery_status="$battery_status_charging"
  fi

  if echo "$battery_bar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_bar_palette; unset IFS; set +f; }
    palette_style=$1
    battery_bg=${2:-none}
    [ x"$palette_style" = x"gradient" ] && \
      palette="196 202 208 214 220 226 190 154 118 82 46"
    [ x"$palette_style" = x"heat" ] && \
      palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"

    palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
    eval set -- "$palette"

    full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
    battery_bar="#[bg=$battery_bg]"
    # shellcheck disable=SC2046
    [ "$full" -gt 0 ] && \
      battery_bar="$battery_bar$(printf "#[fg=colour%s]$battery_bar_symbol_full" $(echo "$palette" | cut -d' ' -f1-"$full"))"
    # shellcheck disable=SC2046
    empty=$((battery_bar_length - full))
    # shellcheck disable=SC2046
    [ "$empty" -gt 0 ] && \
      battery_bar="$battery_bar$(printf "#[fg=colour%s]$battery_bar_symbol_empty" $(echo "$palette" | cut -d' ' -f$((full + 1))-$((full + empty))))"
      eval battery_bar="$battery_bar#[fg=colour\${$((full == 0 ? 1 : full))}]"
  elif echo "$battery_bar_palette" | grep -q -E '^(([#a-z0-9]{7,9}|none),?){3}$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_bar_palette; unset IFS; set +f; }
    battery_full_fg=$1
    battery_empty_fg=$2
    battery_bg=$3

    full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
    [ x"$battery_bg" != x"none" ] && \
      battery_bar="#[bg=$battery_bg]"
    #shellcheck disable=SC2046
    [ "$full" -gt 0 ] && \
      battery_bar="$battery_bar#[fg=$battery_full_fg]$(printf "%0.s$battery_bar_symbol_full" $(seq 1 "$full"))"
    empty=$((battery_bar_length - full))
    #shellcheck disable=SC2046
    [ "$empty" -gt 0 ] && \
      battery_bar="$battery_bar#[fg=$battery_empty_fg]$(printf "%0.s$battery_bar_symbol_empty" $(seq 1 "$empty"))" && \
      battery_bar="$battery_bar#[fg=$battery_empty_fg]"
  fi

  if echo "$battery_hbar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_hbar_palette; unset IFS; set +f; }
    palette_style=$1
    [ x"$palette_style" = x"gradient" ] && \
      palette="196 202 208 214 220 226 190 154 118 82 46"
    [ x"$palette_style" = x"heat" ] && \
      palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"

    palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
    eval set -- "$palette"

    full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
    eval battery_hbar_fg="colour\${$((full == 0 ? 1 : full))}"
  elif echo "$battery_hbar_palette" | grep -q -E '^([#a-z0-9]{7,9},?){3}$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_hbar_palette; unset IFS; set +f; }

    # shellcheck disable=SC2046
    eval $(awk "BEGIN { printf \"battery_hbar_fg=$%d\", (($charge) - 0.001) * $# + 1 }")
  fi

  eval set -- "▏ ▎ ▍ ▌ ▋ ▊ ▉ █"
  # shellcheck disable=SC2046
  eval $(awk "BEGIN { printf \"battery_hbar_symbol=$%d\", ($charge) * ($# - 1) + 1 }")
  battery_hbar="#[fg=${battery_hbar_fg?}]${battery_hbar_symbol?}"

  if echo "$battery_vbar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_vbar_palette; unset IFS; set +f; }
    palette_style=$1
    [ x"$palette_style" = x"gradient" ] && \
      palette="196 202 208 214 220 226 190 154 118 82 46"
    [ x"$palette_style" = x"heat" ] && \
      palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"

    palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
    eval set -- "$palette"

    full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
    eval battery_vbar_fg="colour\${$((full == 0 ? 1 : full))}"
  elif echo "$battery_vbar_palette" | grep -q -E '^([#a-z0-9]{7,9},?){3}$'; then
    # shellcheck disable=SC2086
    { set -f; IFS=,; set -- $battery_vbar_palette; unset IFS; set +f; }

    # shellcheck disable=SC2046
    eval $(awk "BEGIN { printf \"battery_vbar_fg=$%d\", (($charge) - 0.001) * $# + 1 }")
  fi

  eval set -- "▁ ▂ ▃ ▄ ▅ ▆ ▇ █"
  # shellcheck disable=SC2046
  eval $(awk "BEGIN { printf \"battery_vbar_symbol=$%d\", ($charge) * ($# - 1) + 1 }")
  battery_vbar="#[fg=${battery_vbar_fg?}]${battery_vbar_symbol?}"

  battery_percentage="$(awk "BEGIN { printf \"%.0f%%\", ($charge) * 100 }")"

  tmux  set -g '@battery_status' "$battery_status" \;\
        set -g '@battery_bar' "$battery_bar" \;\
        set -g '@battery_hbar' "$battery_hbar" \;\
        set -g '@battery_vbar' "$battery_vbar" \;\
        set -g '@battery_percentage' "$battery_percentage"
}
#
_battery "$@"
