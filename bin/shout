#!/bin/bash

# Make sure we abort on error
set -e

progname="`basename \"$0\"`"
pversion='$Revision: 1.58 $'

setq() {
    # Variable Value Doc string
    if [ "x$2" = "x" ]; then
        echo >&2 "$progname: Unable to determine $3"
        exit 1;
    else
        if [ ! "x$Verbose" = "x" ]; then
            echo "$progname: $3 is $2";
        fi
        eval "$1=\"\$2\"";
    fi
}

withecho () {
        echo " $@" >&2
        "$@"
}

usageversion () {
        cat >&2 <<END

Usage: $progname  [options] [title] message time-string
Options:
  -h|--help      print this message
  -n|--dryrun    "Dry-run" mode - No action taken, only print commands.
  -i|--icon icon Use a specified icon tor the rmessage
                 Uses file names under /usr/share/icons/gnome/32x32/
                 Default: dialog-warning
  -t|--time num  How long to let the notice stay up in milliseconds
                 [default 0 -- indefinite]
END
}

docmd='YES'
action='withecho'
icon='dialog-warning'
timeout=0

# parse Command line
# Note that we use `"$@"' to let each command-line parameter expand to a
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
TEMP=$(getopt -a -s bash -o hni:t: --long dryrun,help,icon:,time: \
       -n "$progname" -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help) usageversion; exit 0   ; shift   ;;
        -i|--icon)
            iconfile=$(find /usr/share/icons/gnome/32x32/ -type f -name ${2}\.*)
            if [ -n "$iconfile" ]; then
                icon=$2;
            else
                echo >&2 icon $2 not found; exit 4;
            fi
            shift 2 ;;
        -n|--dryrun) action='echo';docmd='NO' ; shift   ;;
        -t|--time)
            case $2 in
                ''|*[!0-9]*) echo >&2 "time not a number [$2]"; exit 2;;
                *) timeout=$2;;
            esac
            shift 2 ;;
        --)      shift ; break ;;
        *) echo >&2 "Internal error!($i)"
            usageversion; exit 1           ;;
    esac
done


if [ $# -lt 2 ]; then
    echo >&2 Need at least 2 arguments, a message and time
    usageversion;
    exit 1;
fi
if [ $# -gt 3 ]; then
    echo >&2 No more than 3 arguments accepted
    usageversion;
    exit 1;
fi

if [ $# -eq 3 ]; then
    title=$1
    shift
else
    title=''
fi
message=$1; shift;
attime=$1

export DISPLAY=:0.0
export XAUTHORITY=~/.Xauthority

if [ "$docmd" = 'YES' ]; then
    echo "export DISPLAY=:0; export XAUTHORITY=~/.Xauthority; notify-send  -i $icon -t $timeout $title $message " | at  $attime
else
    echo "echo \"export DISPLAY=:0; export XAUTHORITY=~/.Xauthority; $action notify-send  -i $icon -t $timeout $title $message \" | at  $attime"
fi
