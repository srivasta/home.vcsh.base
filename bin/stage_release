#! /bin/zsh -f


progname="`basename \"$0\"`"
set -e

workdir_top=/usr/local/src/debian
staging_dir=/scratch/sandbox/staging/input
curdir=$(pwd)

withecho () {
    echo " $@" >&2
    "$@"
}
action='withecho'
#action='echo'
opt_pkg=

usageversion () {
        cat >&2 <<END
Usage: $progname  [options]
Options: 
  -h           print this message
  -n           "Dry-run" mode - No action taken, only print commands.
  -p name      Over ride the package name 
  -v           Make the command verbose

END
}

# parse Command line
# Note that we use `"$@"' to let each command-line parameter expand to a 
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
TEMP=$(getopt -a -s bash -o hnvp: -n 'stage_release' -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"
while true ; do
    case "$1" in
        -h|--help) usageversion; exit 0   ; shift   ;;
        -n)      action='echo';docmd='NO' ; shift   ;;
        -p)      opt_pkg="$2"             ; shift 2 ;;
        -v)      VERBOSE=1                ; shift   ;;
        --)      shift ; break ;;
        *) echo >&2 "Internal error!($i)"
            usageversion; exit 1           ;;
    esac
done


if [[ -n "$opt_pkg" ]]; then
    pkg="$opt_pkg"
fi

if [[ -n "$1" ]]; then
    pkg=$1
fi


test -n "$pkg" || echo >&2 No package name provided
test -n "$pkg" || exit 1

if [[ ! -d "$workdir_top/$pkg" ]]; then
    echo >&2 No working directory found for "$pkg"
    exit 3
fi

if [[ ! -d "$staging_dir" ]]; then
    echo >&2 No staging directory found "$staging_dir"
    exit 4
fi


cd $workdir_top/$pkg

changelog=$(find $pkg* -wholename '*/debian/changelog')
debdir=$(dirname $changelog)
topdir=$(dirname $debdir)

version=$(dpkg-parsechangelog -l$changelog | sed -ne 's/^Version: //p' )
non_epoch_version=$(echo -n "$version" | perl -pe 's/^\d+://')
upstream_version=$(echo -n "$non_epoch_version" | sed  -e 's/-[^-]*$//')
debian_version=$(echo -n $non_epoch_version |  perl -nle 'm/-([^-]*)$/ && print $1')

if [[ -n "$debian_version" ]]; then
    upstream_tarball=$workdir_top/$pkg/${pkg}_${upstream_version}.orig.tar.gz
else
    upstream_tarball=
fi


# Get ready to copy the source dir over, 
if [[ -d $staging_dir/$pkg ]]; then
    echo >&2 The distrination directory $staging_dir/$pkg already exists
    echo >&2 removing $staging_dir/$pkg
    $action rm -r $staging_dir/$pkg
fi
$action mkdir -p $staging_dir/$pkg

if [[ -z "$debian_version" ]]; then
    dest_dir=$pkg
else
    dest_dir=$pkg-$upstream_version
fi

if [[ -d "$pkg" ]]; then
    if [[ -n "$debian_version" ]]; then
        echo >&2 We have an unversioned source dir, and yet a debian version
        echo >&2 "[ $debian_version ]"
        echo >&2 This is confusing
        exit 5
    fi
    $action cp -a $pkg $staging_dir/$pkg/$dest_dir
elif [[ -d "$pkg-$upstream_version" ]]; then
    if [[ -z "$debian_version" ]]; then
        echo >&2 We have an versioned source dir, and yet no debian version
        echo >&2 This is confusing
        exit 6
    fi
    $action cp -a "$pkg-$upstream_version" $staging_dir/$pkg
    if [[ -n "$upstream_tarball" ]] &&  [[ -e "$upstream_tarball" ]]; then
        echo >&2 "Exporting upstream sources to $staging_dir/$pkg ."
        $action cp -pf $upstream_tarball $staging_dir/$pkg
    else
        cd "$pkg-$upstream_version"
        if `git branch | grep pristine-tar 2>&1 >/dev/null`; then
            $action pristine-tar -v checkout "${pkg}_${upstream_version}.orig.tar.gz"
            $action mv "${pkg}_${upstream_version}.orig.tar.gz" ../
        else
            echo >&2 Could not find upstream source
            exit 7
        fi
        cd ..
        $action cp -pf $upstream_tarball $staging_dir/$pkg
    fi
else
    echo >&2 cannot determine source directory
    exit 8
fi

# Clean up the git stuff
$action find $staging_dir/$pkg/$dest_dir \
           -depth \( \( -type f -a -name .gitmodules \) -o \( -type d -a -name .git \) \) \
              -exec rm -rf {} \;
