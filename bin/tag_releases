#! /bin/zsh
set -e

workdir_top=/usr/local/src/debian
pkg=$1

withecho () {
    echo " $@" >&2
    "$@"
}
action='withecho'
#action='echo'


test -n "$pkg" || echo >&2 No package name provided
test -n "$pkg" || exit 1

if [[ ! -d "$workdir_top/$pkg" ]]; then
    echo >&2 No working directory found for "$pkg"
    exit 3
fi

echo cd $workdir_top/$pkg
cd $workdir_top/$pkg
changelog=$(find $pkg* -wholename '*/debian/changelog')
debdir=$(dirname $changelog)
topdir=$(dirname $debdir)

version=$(LC_ALL=C dpkg-parsechangelog -l$changelog | sed -ne 's/^Version: //p' )
non_epoch_version=$(echo -n "$version" | perl -pe 's/^\d+://')
upstream_version=$(echo -n "$non_epoch_version" | sed  -e 's/-[^-]*$//')
debian_version=$(echo -n $non_epoch_version |  perl -nle 'm/-([^-]*)$/ && print $1')

if [[ -n "$debian_version" ]]; then
    upstream_tarball=$workdir_top/$pkg/${pkg}_${upstream_version}.orig.tar.gz
else
    upstream_tarball=
fi

tag_dir ()
{
    if [ ! -e .git/refs/tags/v${non_epoch_version} ]; then 
        $action git tag -s -m"Released version ${version}" v${non_epoch_version}; 
    fi
    $action git push --all
    $action git push --tags
}

tag_dir_debian ()
{
    if [ ! -e .git/refs/tags/v${non_epoch_version} ]; then 
        $action git tag -s -m"[$pkg]: Released version ${version}" ${pkg}-v${non_epoch_version}; 
    fi
    $action git push --all
    $action git push --tags
}


if [[ -d "$pkg" ]]; then
    if [[ -n "$debian_version" ]]; then
        echo >&2 We have an unversioned source dir, and yet a debian version
        echo >&2 "[ $debian_version ]"
        echo >&2 This is confusing
        exit 5
    fi
    echo cd "$pkg"
    cd "$pkg"
elif [[ -d "$pkg-$upstream_version" ]]; then
    if [[ -z "$debian_version" ]]; then
        echo >&2 We have an versioned source dir, and yet no debian version
        echo >&2 This is confusing
        exit 6
    fi
    echo cd "$pkg-$upstream_version"
    cd "$pkg-$upstream_version"
fi

tag_dir
  
## ($action cd "debian"; tag_dir_debian );

